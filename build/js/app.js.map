{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app.js","webpack:///./Mouse.js","webpack:///./Ball.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","screen","height","window","innerHeight","width","innerWidth","canvas","document","querySelector","ctx","getContext","console","log","conter","count","getRandomArbitrary","min","max","Math","random","mouse","Mouse","mouseBall","Ball","x","y","radius","color","balls","newBallCoords","j","length","getDistance","push","Render","clearRect","updatePos","draw","forEach","ball","ballCurrent","phys","innerHTML","ballsColision","speed","sideColision","frict","requestAnimationFrame","_this","this","_classCallCheck","rect","getBoundingClientRect","addEventListener","evt","clientX","left","clientY","top","obj","velocity","velocityX","friction","mass","gravity","colorType","type","save","beginPath","arc","PI","strokeStyle","fillStyle","lineWidth","stroke","fill","closePath","restore","self","dx","dy","sqrt","pow","angle","cos","sin","xVelocityDiff","yVelocityDiff","xDist","yDist","atan2","ex","ey","m2","m1","u2","rotate","u1","v2","v1","vFinal2","vFinal1","abs"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"js/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Mouse from './Mouse.js'\r\nimport Ball from './Ball.js';\r\n\r\n// ======Canvas======\r\nlet screen = {\r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n}\r\nlet canvas = document.querySelector('canvas');\r\nlet ctx = canvas.getContext('2d');\r\ncanvas.height = screen.height;\r\ncanvas.width = screen.width;\r\n\r\nconsole.log(canvas.height)\r\n\r\n// ======Control Vars======\r\nlet mouseBallRadius = 50;\r\nlet conter = document.querySelector('.count');\r\nlet count = 0;\r\nlet mouseBallColor = '#00adb5';\r\nlet ballsColor = '#f8b500';\r\nlet ballsCount = 100;\r\n\r\n// ======Get random number function======\r\nfunction getRandomArbitrary(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n// ======Each ball colision function======\r\nfunction ballsColision(ballCurrent, ball) {\r\n    for (let j = 0; j < balls.length; j++) {\r\n        if (j !== ballCurrent) {\r\n            let is = ball.phys(balls[j], mouse);\r\n            if (is == true) {\r\n                count++;\r\n                conter.innerHTML= count;\r\n            }\r\n        }\r\n        else {\r\n            continue\r\n        }\r\n    }\r\n}\r\n\r\n// ======Mouse ball======\r\nlet mouse = new Mouse(canvas);\r\nlet mouseBall = new Ball({\r\n    x: mouse.x,\r\n    y: mouse.y,\r\n    radius: mouseBallRadius,\r\n    color: mouseBallColor\r\n});\r\n\r\n// ======Create little balls======\r\nlet balls = [];\r\nfor (let i = 0; i < ballsCount; i++) {\r\n    let radius = getRandomArbitrary(5, 20);\r\n    let newBallCoords = {};\r\n    newBallCoords = {\r\n        x: getRandomArbitrary(radius, window.innerWidth - radius),\r\n        y: getRandomArbitrary(radius, window.innerHeight - radius),\r\n    }\r\n    // ======Check if balls overlaping======\r\n    if (i != 0) {\r\n        for (let j = 0; j < balls.length; j++) {\r\n            if (balls[0].getDistance(newBallCoords, balls[j]) < balls[j].radius + radius) {\r\n                newBallCoords.x = getRandomArbitrary(radius, window.innerWidth - radius);\r\n                newBallCoords.y = getRandomArbitrary(radius, window.innerHeight - radius);\r\n                j = -1;\r\n            }\r\n        }\r\n    }\r\n    balls.push(new Ball({\r\n        color: ballsColor,\r\n        radius: radius,\r\n        x: newBallCoords.x,\r\n        y: newBallCoords.y\r\n    }));\r\n}\r\n\r\nfunction Render() {\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    mouseBall.updatePos(mouse.x, mouse.y);\r\n    mouseBall.draw(ctx, 'fill')\r\n\r\n    balls.forEach((ball, ballCurrent) => {\r\n\r\n        ballsColision(ballCurrent, ball);\r\n        ball.phys(mouseBall, mouse);\r\n        ball.speed();\r\n        ball.sideColision(canvas);\r\n        ball.frict();\r\n\r\n        ball.draw(ctx, 'fill');\r\n    })\r\n    window.requestAnimationFrame(Render);\r\n}\r\n\r\nRender();\r\n","export default class Mouse {\r\n    constructor(canvas) {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        let rect = canvas.getBoundingClientRect();\r\n\r\n        canvas.addEventListener('mousemove', (evt) => {\r\n            this.x = evt.clientX - rect.left,\r\n            this.y = evt.clientY - rect.top\r\n        })\r\n    }\r\n}","export default class Ball {\r\n\r\n    constructor(obj) {\r\n        this.radius = obj.radius || 10;\r\n\r\n        this.x = obj.x;\r\n        this.y = obj.y;\r\n\r\n        this.velocity = {\r\n            x: obj.velocityX || 0,\r\n            y: obj.velocityX || 0\r\n        }\r\n\r\n        this.color = obj.color || '#98ccd3';\r\n        this.friction = 0.9;\r\n        this.mass = this.radius;\r\n        this.gravity = 0.6;\r\n    }\r\n\r\n    draw(ctx, colorType) {\r\n        let type = colorType || 'stroke';\r\n        ctx.save()\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n        ctx.strokeStyle = this.color;\r\n        ctx.fillStyle = this.color;\r\n        ctx.lineWidth = 1;\r\n        if (type == 'stroke') {\r\n            ctx.stroke();\r\n        }\r\n        if (type == 'fill') {\r\n            ctx.fill();\r\n        }\r\n        ctx.closePath();\r\n        ctx.restore();\r\n    }\r\n\r\n    updatePos(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    getDistance(self, object) {\r\n        let dx = self.x - object.x;\r\n        let dy = self.y - object.y;\r\n        return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\r\n    }\r\n\r\n    rotate(obj, angle) {\r\n        const rotatedVelocities = {\r\n            x: obj.x * Math.cos(angle) - obj.y * Math.sin(angle),\r\n            y: obj.x * Math.sin(angle) + obj.y * Math.cos(angle)\r\n        };\r\n        return rotatedVelocities;\r\n    }\r\n\r\n    phys(object, mouse) {\r\n        let distance = this.getDistance(this, object);\r\n        // Colision Moment\r\n        if (distance < this.radius + object.radius) {\r\n\r\n            const xVelocityDiff = object.velocity.x - this.velocity.x;\r\n            const yVelocityDiff = object.velocity.y - this.velocity.y;\r\n\r\n            const xDist = this.x - object.x;\r\n            const yDist = this.y - object.y;\r\n\r\n            const angle = -Math.atan2(this.y - object.y, this.x - object.x);\r\n\r\n            // This element colides with mouse ball\r\n            if (object.x === mouse.x & object.y === mouse.y) {\r\n\r\n                let ex = object.x + Math.cos(angle) * (object.radius + this.radius);\r\n                let ey = object.y - Math.sin(angle) * (object.radius + this.radius);\r\n\r\n                // console.log('x: ', inX, 'y:', inY)\r\n                this.velocity.x += (ex - this.x) * 0.8;\r\n                this.velocity.y += (ey - this.y) * 0.8;\r\n\r\n            // This element colides with other ball\r\n            } else {\r\n                // If objects are not overlaping\r\n                if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\r\n\r\n                    const m2 = object.mass;\r\n                    const m1 = this.mass;\r\n\r\n                    // Velocity before\r\n                    const u2 = this.rotate(object.velocity, angle);\r\n                    const u1 = this.rotate(this.velocity, angle);\r\n\r\n                    // Velocity after\r\n                    const v2 = { x: - u1.x + 2 * ((u1.x * m1 + u2.x * m2) / (m2 + m1)) * this.friction, y: u1.y };\r\n                    const v1 = { x: - u2.x + 2 * ((u1.x * m1 + u2.x * m2) / (m2 + m1)) * this.friction, y: u2.y };\r\n\r\n                    // Final velocity\r\n                    const vFinal2 = this.rotate(v1, -angle);\r\n                    const vFinal1 = this.rotate(v2, -angle);\r\n\r\n                    // Update velocity\r\n                    object.velocity.x = vFinal2.x;\r\n                    object.velocity.y = vFinal2.y;\r\n                    this.velocity.x = vFinal1.x;\r\n                    this.velocity.y = vFinal1.y;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    reduceVxy() {\r\n        if (Math.abs(this.velocity.y) < this.radius / 100 & Math.abs(this.velocity.x) < this.radius / 100) {\r\n            this.velocity.y = 0;\r\n            this.velocity.x = 0;\r\n        }\r\n    }\r\n\r\n    sideColision(screen) {\r\n        //Left side colision\r\n        if (this.x - this.radius < 0) {\r\n            let ex = (this.radius);\r\n            this.velocity.x += (ex - this.x) * this.friction;\r\n        }\r\n        //Right side colision\r\n        if (this.x + this.radius > screen.width) {\r\n            let ex = (screen.width - this.radius);\r\n            this.velocity.x += (ex - this.x) * this.friction;\r\n        }\r\n        //Top side colision\r\n        if (this.y - this.radius < 0) {\r\n            let ey = (this.radius);\r\n            this.velocity.y += (ey - this.y) * this.friction;\r\n        }\r\n        //Bottom side colision\r\n        if (this.y + this.radius > screen.height) {\r\n            let ey = (screen.height - this.radius);\r\n            this.velocity.y += (ey - this.y) * this.friction;\r\n        }\r\n    }\r\n\r\n    frict() {\r\n        this.velocity.y *= this.friction;\r\n        this.velocity.x *= this.friction;\r\n    }\r\n\r\n    speed() {\r\n        this.x += this.velocity.x;\r\n        this.y += this.velocity.y + 0.0 * this.radius;\r\n    }\r\n}"],"sourceRoot":""}